/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.1.4 public/hand_asl.gltf -t -r public
*/

import * as THREE from 'three'
import React, { useRef } from 'react'
import { useGLTF, useAnimations } from '@react-three/drei'
import { GLTF } from 'three-stdlib'

type GLTFResult = GLTF & {
  nodes: {
    Cube003: THREE.Mesh
    Cube003_1: THREE.Mesh
  }
  materials: {
    Sleeve: THREE.MeshStandardMaterial
    Skin: THREE.MeshStandardMaterial
  }
}

type ActionName = 'sleeve'
type GLTFActions = Record<ActionName, THREE.AnimationAction>

export function Model(props: JSX.IntrinsicElements['group']) {
  const group = useRef<THREE.Group>()
  const { nodes, materials, animations } = useGLTF('/hand_asl.gltf') as GLTFResult
  const { actions } = useAnimations(animations, group)
  return (
    <group  {...props} dispose={null}>
      <group name="Scene">
        <group name="sleeve" position={[0.03, -0.19, 0.02]} rotation={[Math.PI, -0.02, Math.PI]} scale={0.5}>
          <mesh name="Cube003" geometry={nodes.Cube003.geometry} material={materials.Sleeve} />
          <mesh name="Cube003_1" geometry={nodes.Cube003_1.geometry} material={materials.Skin} />
        </group>
      </group>
    </group>
  )
}

useGLTF.preload('/hand_asl.gltf')
